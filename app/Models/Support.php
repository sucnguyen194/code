<?php

namespace App\Models;

use App\Enums\ActiveDisable;
use App\Enums\SystemType;
use Illuminate\Database\Eloquent\Model;
use Spatie\Activitylog\Traits\LogsActivity;

class Support extends Model
{

    use LogsActivity;

    protected static $logUnguarded = true;
    protected static $submitEmptyLogs = false;
    protected static $logOnlyDirty = true;

    protected $guarded = ['id'];

    public function translations(){
        return $this->hasMany(Translation::class);
    }

    public function translation(){
        return $this->hasOne(Translation::class);
    }

    public function scopeWithTranslation($q){
        $q->with('translation', function ($q){
            $q->locale();
        });
    }

    public function admin(){
        return $this->belongsTo(Admin::class);
    }

    public function getRouteAttribute(){
        switch ($this->type){
            case SystemType::CUSTOMER:
                return route('admin.supports.customers.index');
                break;
            case SystemType::SUPPORT:
                return route('admin.supports.index');
                break;
        }
    }

    public function scopePublic($q){
        $q->wherePublic(ActiveDisable::active);
    }

    public function scopeStatus($q){
        $q->whereStatus(ActiveDisable::active);
    }

    protected static function boot()
    {
        parent::boot(); // TODO: Change the autogenerated stub

        self::saving(function($support){
            $support->admin_id = $support->admin_id ? $support->admin_id : auth()->id();
        });
    }
}
