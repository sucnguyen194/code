<?php

namespace App\Models;

use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Support\Str;
use Spatie\Activitylog\Traits\LogsActivity;

class Filter extends AppModel
{
    use HasFactory, LogsActivity;

    protected static $logUnguarded = true;
    protected static $submitEmptyLogs = false;
    protected static $logOnlyDirty = true;

    protected $with = ['translation'];

    public function translations(){
        return $this->hasMany(FilterTranslation::class)->where(function($q){
            $q->whereIn('locale', Language::pluck('value')->toArray());
        });
    }

    public function translation(){
        return $this->hasOne(FilterTranslation::class)->withDefault(function ($translation){
            $translation->locale = session('lang');
        });
    }

    public function parents(){
        return $this->hasMany(Filter::class,'parent_id')->oldest('sort');
    }

    public function getSlugAttribute(){
        if(!$this->name)
            return;

        $name = $this->name;

        $slug = request()->fullUrl().'?attr='.$name;

        if(request()->has('attr') && request()->filled('attr'))
            $slug = request()->fullUrl().','.$name;

        if(empty(request()->attr) && request()->has('attr'))
            $slug = request()->fullUrl().$name;

        return $slug;
    }

    public function getRemoveSlugAttribute(){
        $slug = Str::replace($this->name, '', request()->attr);

        if(Str::contains(request()->attr ,$this->name.','))
            $slug = Str::replace($this->name.',', '', request()->attr);

        if(Str::contains(request()->attr ,','.$this->name))
            $slug = Str::replace(','.$this->title, '', request()->attr);

        return request()->url().'?attr='.$slug;
    }

    public static function boot()
    {
        parent::boot(); // TODO: Change the autogenerated stub

        static::deleting(function($attribute){
            if($attribute->parents())
                $attribute->parents()->delete();
        });
    }
}
